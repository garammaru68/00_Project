1.마우스 레이값
1-1.디렉션 정규화 ( TransformNormal )

2.페이스 리스트

공간분할
원 충돌로 확인 -> 삼각형 충돌

OBB to OBB

마주보고 있는 평면을 노말로 사용

m_tMeshMap
FbxMesh->GetControlPointsCount() - 제어점
		GetControlPoints();

컬러 위치, 노말, 

DxObject.h 수정

LOD + MousePicking + FrustumCulling

ASE 파일은 월드좌표

1.Object 여러개 추가
2.SubMaterial 추가
3.

3DMAX
export - Z-up
tga형식 지원X (BMP로 바꾸기)

모든 페이스를 각각 사용하는 서브 메테리얼을 찾아서 나누고
트라이앵글 리스트(서브 메테리얼 수만큼)를 만들어서
서브 메테리얼당 VB, IB

레이어 하나이상X - 덮어쓰기
하나의 레이어당 pnct
FbxLayerElementMaterial - 
GetMappingMode() 모두의 종류
iSubMtrl = iPoly // iPoly(face)당 텍스쳐 (면 하나가 인덱스)

행렬, 노말, 버텍스 컬러

1.지오메트릭 트랜스폼 - 본(바이패드) 좌표계로 변환(움직일때 마다 원점) - 바이패드(Biped) 공간으로 돌아감
  뼈가 없으면 단위행렬, 
2.로컬 트랜스폼 - 원점에서 월드로 변환
3.애니메이션 트랜스폼 - 시간에 따라 행렬이 달라진다
  월드 좌표 곱하지 않는다.

  행렬에 의한 변환
  normalMatrix = geo의 역행렬 -> 전치
  
  Direct Light 방향
  Point Light 위치
  Spot Light 방향, 위치, 범위

Object Material - 오브젝트 마다 빛을 표현하는 범위가 다르다

eDirect - 배열에 있을 경우
eIndexToDirect  - 인덱스에 데이터가 있을 경우
SDxObject->Update - time을 view(시선)벡터로 넘겨준다

1프레임 4800틱
샘플링 방식		- 곡선 알고리즘이 적용 되어이쓴 파형을 샘플링
네거티브 스케일	- 반대쪽으로 변형하다 좌표 방향이 역전되는 것
				  -1을 곱하면 정상적으로 변함
vColor = m_vLook - 카메라가 바라보는 방향이 라이트 벡터

<Animation>
animationStack = 동작
fFrameTime = 0.033
fSampleTime = fFrameTime * 1.0f(프레임)
Evaluator - 작업 도구
GetNodeGlobalTransform(); - 최종 행렬

<Character>
-논블랜딩-
행렬을 배열로
쉐이더에 넘기고
행렬의 인덱스를 넘긴다

-블래딩-
정점에 인덱스와 가중치 저장

GetDeformerCount - 적용된 Skin의 갯수
deforemer - 장치
pCluster - 노드
ClusterCount - mesh에 영향을 주는 행렬 바이패드의 갯수
ClusterSize - mesh에 영향을 받는 정점(노드)의 갯수
Sample 방식 - 50개의 행렬중 어떤 정점에 영향을 주는가

iBoneIndex - 인덱스 정렬 결과

// 프레임(애니메이션 행렬 계산) 랜더 나누고, 프레임에서 계산한 인덱스 결과를 배열로 저장, 쉐이더로 전달

버퍼를 따로 추가해서 
멀티 스트링 - 레이아웃 편집
상수버퍼 행렬값 255개 너겨주기
SHADER 변경
UNIT stride ~~ 멀티 스트링
행렬과 정점 확인 
정점을 바이패드 공간으로 바꿔준후 애니메이션
(월드로 분산)
파일이 나눠져 있을때 mesh를
SRT로 분해해서 애니메이션 보간후 최종월드행렬을 이용해야함
GetTransformLinkMatrix()
GetTransformMatrix()
matBindPos - 
1. 바이패드 행렬을 정점에 곱해서 애니메이션(오브젝트가 하나일 경우)
2. mesh에서 bindpose를 뽑고 로컬공간에 적용
스킨이 적용된 정점뿐만 아니라 모든 정점에 바이패드가 적용되어야 한다

CStopWatch - 경과시간
Shader Manager 필요
Single 사용중

<애니메이션 프레임>
WALK  - 3 ~ 35
IDLE1 - 35 ~ 101
IDLE2 - 101 ~ 161

SRT 분해 (부모행렬)
matInvBindPos.Invert() - mesh에서만 뽑으

m = 자기자신 행렬
Decompose - 직교행렬은 분해된다
행렬로 보간하면 순서가 바뀔 수 있다

<쓰지 않는 Key 빼기>
변환량을 시간으로 나눔
S(Scale) or R(Rotation) or T(translation)가 있는지 없는지 확인 - Animation 유무 확인
Start 와 End는 넣어둔다 ( 있을 경우 )
0 Tick(Start)에서 모든 Tick 비교(End까지)
vb, ib, aniTrack

<캐릭터 이동>
월드 행렬(단위 행렬)에 변환 행렬을 넘겨준다
AnimationTrack {
모든 바이패드에 시간을 넘겨주는 함수();
}

<BindPoseAnimation>

캐릭터 시선 높이(y)를 정규화해서 회전 ( 마우스 클릭 높이를 캐릭터 시선으로 맞춘 후 회전 (y = 0) )

<카메라>
클릭한 곳을 중점으로 회전

행렬 직접 접근 setMatrix가 아니라 직접만든 Matrix를 넘겨준다

Index -> FaceNormal

RimLight = 사물이 뚜렷하게 보임 ( 사물 뒤에서 조명 )
포인터샘플링 - SkyBox 경계선 없애기
FrontCulling
z Buffer를 만들지 않거나 z를 최대치로

<환경맵핑>
지형당 환경맵핑 적용
오브젝트 중심으로 범위를 잡아서 계산
오브젝트 하나의 반사벡터를 모든 오브젝터에 적용

뷰행렬 6개 정해주고 
MRT - post effect 데이터 추출작업
디퍼드 랜더링(지연 렌더링 - 후처리) - 이미지, 컬러, 정점노말, 라이트
							장점  - 계산이 줄어든다
							단점  - 그림자 작업이 어렵다

<노말 맵핑>
로우 폴리곤을 하이 폴리곤화 시킬때 사용
접선 벡터 - 탄젠트 벡터
정점마다 접선벡터가 필요하다

상수버퍼 - 정적화 
모든 바이패드에 시간을 

<가우스 블러링>
픽셀 세이더에서 가중치값 곱셈

sobel 대각선으로 비교
엣지 찾기 - 깊이

3차 카디널 스프라인 = 캠멀론? 스프라인

hull shader(입력) - 테셀레이션 - domain shader(출력)

가중치 - 추가된 제어점의 양쪽 제어점의 가중치의 중간값 ( 따로 가중치를 넣을 필요가 없다 )
추가된 제어점의 접선 벡터 - 뒤집은 노말 벡터

Tool - 메뉴 툴바 단축키
<MFC>
속성 - 메세지 - WM_CREATE - OnCreate & OnMouseActivate
MA_NOACTIVATE - 상속 오류 처리
Properties

배리어 - 리소스, 펜스 - 프레임
dx12 - 번들

적은 데이터를 바꿀 경우(행렬만 다를 경우) - immediateContext 상수 버퍼 바꾸기
Create(셋팅)에서 DefferdContext를 Update(적용) 시킬 경우 고정값이 되어 Data 변경불가
- 값을 바꿀때 ImmediateContext를 사용하여 바꾸기

<맵툴>
커스텀 마이징 맵 + 쿼드트리 + 프로스텀 + LOD
Tile		1 ~ 4
Cell		1 ~ 64
Cell Size	1 ~ 2n승
2n승 + 1
Texture File