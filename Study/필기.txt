1.마우스 레이값
1-1.디렉션 정규화 ( TransformNormal )

2.페이스 리스트

공간분할
원 충돌로 확인 -> 삼각형 충돌

OBB to OBB

마주보고 있는 평면을 노말로 사용

m_tMeshMap
FbxMesh->GetControlPointsCount() - 제어점
		GetControlPoints();

컬러 위치, 노말, 

DxObject.h 수정

LOD + MousePicking + FrustumCulling

ASE 파일은 월드좌표

1.Object 여러개 추가
2.SubMaterial 추가
3.

3DMAX
export - Z-up
tga형식 지원X (BMP로 바꾸기)

모든 페이스를 각각 사용하는 서브 메테리얼을 찾아서 나누고
트라이앵글 리스트(서브 메테리얼 수만큼)를 만들어서
서브 메테리얼당 VB, IB

레이어 하나이상X - 덮어쓰기
하나의 레이어당 pnct
FbxLayerElementMaterial - 
GetMappingMode() 모두의 종류
iSubMtrl = iPoly // iPoly(face)당 텍스쳐 (면 하나가 인덱스)

행렬, 노말, 버텍스 컬러

1.지오메트릭 트랜스폼 - 본(바이패드) 좌표계로 변환(움직일때 마다 원점) - 바이패드(Biped) 공간으로 돌아감
  뼈가 없으면 단위행렬, 
2.로컬 트랜스폼 - 원점에서 월드로 변환
3.애니메이션 트랜스폼 - 시간에 따라 행렬이 달라진다
  월드 좌표 곱하지 않는다.