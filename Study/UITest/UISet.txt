Texture2D  g_txTexture : register(t0);
SamplerState  sample0 : register(s0);

struct VS_INPUT
{
	float3 p : POSITION;	   
	float4 c : COLOR;
	float2 t : TEXCOORD;
};
struct VS_OUTPUT
{
	float4 p : SV_POSITION;	 // Ω√∏‡∆Ω(¿«πÃ±∏¡∂)
	float4 c : COLOR0;
    float2 t : TEXCOORD0;	
};

cbuffer cb0
{
	matrix  g_matWorld : packoffset(c0);
	matrix  g_matView : packoffset(c4);
	matrix  g_matProj : packoffset(c8);
	float   angleCos :  packoffset(c12.x);
	float   angleSin :  packoffset(c12.y);
	float   angleZ :  packoffset(c12.z);
	float   angleW :  packoffset(c12.w);
};

VS_OUTPUT VS( VS_INPUT vIn )
{
	VS_OUTPUT vOut = (VS_OUTPUT)0;
	float4 vLocal = float4(vIn.p.x, vIn.p.y, vIn.p.z, 1.0f);
	//vertex.x = vLocal.x * angleCos + vLocal.y * -angleSin;
	//vertex.y = vLocal.x * angleSin + vLocal.y * angleCos;		
	vOut.p = mul(vLocal, g_matWorld);
	vOut.p = mul(vOut.p, g_matView);
	vOut.p = mul(vOut.p, g_matProj);
	vOut.t = vIn.t;
	vOut.c = vIn.c ;
	return vOut;
}

struct PS_OUTPUT
{
	float4 c : SV_TARGET;	
};
PS_OUTPUT PS( VS_OUTPUT vIn) 
{
	PS_OUTPUT vOut;
	vOut.c = g_txTexture.Sample(sample0, vIn.t);
	return vOut;
}